MainPrgm L3_soft_test ;

Var    

    @define Const InvalidFloat : Float = 5;  <!- type incorrect de float = int -!>
    @define Const InvalidInt : Int = (+15.02);  <!- type incorrect de int = float -!>
    let IntigerIdf, y : Int;  
    let arrrayA, arrrayB : [Int ; 5];  
    let arrrayC : [Int; (-5)];
    let floatIdf : Float;  
    
    <!- Erreurs sémantiques -!>
    let x, y, x : Int;  <!- Double déclaration de x -!>
    @define Const MaxValue : Int = 100;
    @define Const MaxValue : Float = 200.5;  <!- Double déclaration de constante -!>
    let A : [Int; 5];
    let B : [Float; 3];

BeginPg
{  
    IntigerIdf := floatIdf;
    
   
    <!- Erreurs lexicales dans les instructions -!>
    x := 12345678901;  <!- Nombre trop grand -!>
    y := 3.14;  
    
    <!- Erreurs syntaxiques dans les instructions -!>
    x := 5;  
    x := 10; 
    if x > 5 then {  <!- Manque les parenthèses autour de la condition -!>
        y := 10;
    }
    
    <!- Erreurs sémantiques -!>
    z := aa+bbbb;  <!- Variable non déclarée -!>
    C[0] := 5;  <!- Tableau non déclaré -!>
    x := 3.14;  <!- Non-compatibilité de type (Int := Float) -!>
    MaxValue := 200;  <!- Modification de la valeur d'une constante -!>
    arrrayA[(-5)] := 6;  <!- Dépassement de la taille du tableau -!>
    y := x / 0;  <!- Division par zéro -!>
    x[1] := 10;  <!- x n'est pas un tableau -!>
    
    <!- Erreurs dans les boucles et conditions -!>
    for j from 1 to 5 step 1 {  <!- j non déclaré -!>
        arrrayB[x] := j;
    }
    
    do {
        x := x + 1;
    } while (x < 10); 
    
    if (x > 10) then {
        y := 20;
    } else   <!- Manque l'accolade ouvrante après else -!>
        y := 30;
    }
    
    <!- Erreurs dans les entrées/sorties -!>
    input(nonDeclared);  <!- Variable non déclarée -!>
     
         
}
EndPg;